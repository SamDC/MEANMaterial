{"name":"Meanmaterial","tagline":"A version of the MEAN JS framework which uses material design.","body":"# MEAN Material \r\n\r\n![Material](https://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0Bx4BSt6jniD7VG9DQVluOFJ4Tnc/materialdesign_principles_metaphor.png)\r\n\r\nThis repo is a port of the MEAN.JS stack which strips out all of the bootstrap dependencies and implements Angular Material. If you want to learn more about the origins and architecture of the stack then go to the [MEAN.JS Website](http://meanjs.org/). More information on [Google Material Design](http://www.google.co.uk/design/spec/material-design/introduction.html#) and of course the [Angular-Material](https://material.angularjs.org/latest/#/) module.\r\n\r\n## Things we are adding \r\nWe are building on the MEAN.JS stack and trying to get to a point where we have a solid reusable application template. A fe things we are going to try and implement:\r\n* User management menus built into the application by default.\r\n* Use SASS to improve customisation.\r\n\r\n\r\n## Prerequisites\r\nMake sure you have installed all these prerequisites on your development machine.\r\n* Node.js - [Download & Install Node.js](http://www.nodejs.org/download/) and the npm package manager, if you encounter any problems, you can also use this [GitHub Gist](https://gist.github.com/isaacs/579814) to install Node.js.\r\n* MongoDB - [Download & Install MongoDB](http://www.mongodb.org/downloads), and make sure it's running on the default port (27017).\r\n* Bower - You're going to use the [Bower Package Manager](http://bower.io/) to manage your front-end packages, in order to install it make sure you've installed Node.js and npm, then install bower globally using npm:\r\n\r\n```\r\n$ npm install -g bower\r\n```\r\n\r\n* Grunt - You're going to use the [Grunt Task Runner](http://gruntjs.com/) to automate your development process, in order to install it make sure you've installed Node.js and npm, then install grunt globally using npm:\r\n\r\n```\r\n$ sudo npm install -g grunt-cli\r\n```\r\n\r\n## Quick Install\r\nOnce you've downloaded the boilerplate and installed all the prerequisites, you're just a few steps away from starting to develop your MEAN Material application.\r\n\r\nThe first thing you should do is install the Node.js dependencies. The boilerplate comes pre-bundled with a package.json file that contains the list of modules you need to start your application, to learn more about the modules installed visit the NPM & Package.json section.\r\n\r\nTo install Node.js dependencies you're going to use npm again, in the application folder run this in the command-line:\r\n\r\n```\r\n$ npm install\r\n```\r\n\r\nThis command does a few things:\r\n* First it will install the dependencies needed for the application to run.\r\n* If you're running in a development environment, it will then also install development dependencies needed for testing and running your application.\r\n* Finally, when the install process is over, npm will initiate a bower install command to install all the front-end modules needed for the application\r\n\r\n## Running Your Application\r\nAfter the install process is over, you'll be able to run your application using Grunt, just run grunt default task:\r\n\r\n```\r\n$ grunt\r\n```\r\n\r\nYour application should run on the 3000 port so in your browser just go to [http://localhost:3000](http://localhost:3000)\r\n                            \r\nThat's it! your application should be running by now, to proceed with your development check the other sections in this documentation.\r\n\r\n## Development and deployment With Docker\r\n\r\n* Install [Docker](http://www.docker.com/)\r\n* Install [Fig](https://github.com/orchardup/fig)\r\n\r\n* Local development and testing with fig: \r\n```bash\r\n$ fig up\r\n```\r\n\r\n* Local development and testing with just Docker:\r\n```bash\r\n$ docker build -t mean .\r\n$ docker run -p 27017:27017 -d --name db mongo\r\n$ docker run -p 3000:3000 --link db:db_1 mean\r\n$\r\n```\r\n\r\n* To enable live reload forward 35729 port and mount /app and /public as volumes:\r\n```bash\r\n$ docker run -p 3000:3000 -p 35729:35729 -v /Users/mdl/workspace/mean-stack/mean/public:/home/mean/public -v /Users/mdl/workspace/mean-stack/mean/app:/home/mean/app --link db:db_1 mean\r\n```\r\n\r\n## Running in a secure environment\r\nTo run your application in a secure manner you'll need to use OpenSSL and generate a set of self-signed certificates. Unix-based users can use the following commnad: \r\n```\r\n$ sh generate-ssl-certs.sh\r\n```\r\nWindows users can follow instructions found [here](http://www.websense.com/support/article/kbarticle/How-to-use-OpenSSL-and-Microsoft-Certification-Authority)\r\nTo generate the key and certificate and place them in the *config/sslcert* folder.\r\n\r\n##Couple of things to be aware of\r\nYou can quickly change the basic theme of the application in the application.js file under public/ in the following block of code:\r\n\r\n```\r\n//Set up the color theme for the application https://material.angularjs.org/latest/#/Theming/01_introduction\r\nangular.module(ApplicationConfiguration.applicationModuleName)\r\n.config(function($mdThemingProvider) {\r\n  $mdThemingProvider.theme('default')\r\n    .primaryPalette('green')\r\n    .accentPalette('light-green');\r\n});\r\n```\r\n\r\nSecondly there are some hard coded CSS entries in material.css which are just in there for now to set some extra configs like the font sizes, etc. and some a element styling. You can easily find any of this in the web browser inspector I'm sure.\r\n\r\n## Getting Started With MEAN.JS\r\nYou have your application running but there are a lot of stuff to understand, we recommend you'll go over the [Official Documentation](http://meanjs.org/docs.html). \r\nIn the docs we'll try to explain both general concepts of MEAN components and give you some guidelines to help you improve your development process. We tried covering as many aspects as possible, and will keep update it by your request, you can also help us develop the documentation better by checking out the *gh-pages* branch of this repository.\r\n\r\n## Community\r\n* Use to [Offical Website](http://meanjs.org) to learn about changes and the roadmap.\r\n* Join #meanjs on freenode.\r\n* Discuss it in the new [Google Group](https://groups.google.com/d/forum/meanjs)\r\n* Ping us on [Twitter](http://twitter.com/meanjsorg) and [Facebook](http://facebook.com/meanjs)\r\n\r\n## Live Example\r\nBrowse the live MEAN.JS example on [http://meanjs.herokuapp.com](http://meanjs.herokuapp.com).\r\n\r\n## Credits\r\nInspired by the great work of [Madhusudhan Srinivasa](https://github.com/madhums/)\r\nThe MEAN name was coined by [Valeri Karpov](http://blog.mongodb.org/post/49262866911/the-mean-stack-mongodb-expressjs-angularjs-and)\r\n\r\n## License\r\n(The MIT License)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}